[{"/home/doo/Documents/work-code/tutorials/typescript-app/src/App.tsx":"1","/home/doo/Documents/work-code/tutorials/typescript-app/src/components/Todo.tsx":"2","/home/doo/Documents/work-code/tutorials/typescript-app/src/components/RickMorty.tsx":"3","/home/doo/Documents/work-code/tutorials/typescript-app/src/index.tsx":"4","/home/doo/Documents/work-code/tutorials/typescript-app/src/Store.tsx":"5","/home/doo/Documents/work-code/tutorials/typescript-app/src/api.js":"6","/home/doo/Documents/work-code/tutorials/typescript-app/src/components/Episode.tsx":"7"},{"size":225,"mtime":1607087150754,"results":"8","hashOfConfig":"9"},{"size":3790,"mtime":1607086104753,"results":"10","hashOfConfig":"9"},{"size":1744,"mtime":1607092354718,"results":"11","hashOfConfig":"9"},{"size":260,"mtime":1607085970245,"results":"12","hashOfConfig":"9"},{"size":914,"mtime":1607089934353,"results":"13","hashOfConfig":"9"},{"size":96,"mtime":1607086928188,"results":"14","hashOfConfig":"9"},{"size":1476,"mtime":1607090539001,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"z6s9wb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/doo/Documents/work-code/tutorials/typescript-app/src/App.tsx",[],["33","34"],"/home/doo/Documents/work-code/tutorials/typescript-app/src/components/Todo.tsx",[],"/home/doo/Documents/work-code/tutorials/typescript-app/src/components/RickMorty.tsx",[],"/home/doo/Documents/work-code/tutorials/typescript-app/src/index.tsx",[],"/home/doo/Documents/work-code/tutorials/typescript-app/src/Store.tsx",["35"],"import React from \"react\";\nimport { IState, IAction, IEpisode } from \"./interfaces\";\n\n// default value for store\nconst initialState: IState = {\n  episodes: [],\n  favourites: [],\n};\n\nexport const Store = React.createContext<IState | any>(initialState); // Consumer and Provider inside\n\nexport const reducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return { ...state, episodes: action.payload };\n    case \"ADD_FAV\":\n      return { ...state, favourites: [...state.favourites, action.payload] };\n    case \"REMOVE_FAV\":\n      return { ...state, favourites: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const StoreProvider = (props: any): JSX.Element => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  return (\n    <Store.Provider value={{ state, dispatch }}>\n      {props.children}\n    </Store.Provider>\n  );\n};\n","/home/doo/Documents/work-code/tutorials/typescript-app/src/api.js",[],["36","37"],"/home/doo/Documents/work-code/tutorials/typescript-app/src/components/Episode.tsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":35},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'IEpisode' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]